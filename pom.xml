<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>chatter-demo-java</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <javafx.version>17.0.8</javafx.version>
        <main.class>com.example.chatterdemo.Main</main.class>
        <server.main.class>com.example.chatterdemo.server.ChatServer</server.main.class>
        <jdk.home>${env.JAVA_HOME}</jdk.home>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.10.1</version>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>src/main/java</sourceDirectory>
        <plugins>
            <!-- 编译插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <release>17</release>
                </configuration>
            </plugin>

            <!-- 打包成JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <outputDirectory>${project.build.directory}/modules</outputDirectory>
                </configuration>
            </plugin>

            <!-- 复制依赖到 modules 目录 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/modules</outputDirectory>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- 使用 exec-maven-plugin 调用 jlink -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <!-- 客户端映像 -->
                    <execution>
                        <id>create-client-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${jdk.home}/bin/jlink</executable>
                            <commandlineArgs>--module-path "${project.build.directory}/modules;${jdk.home}/jmods" --add-modules java.base,java.logging,javafx.controls,javafx.fxml,javafx.graphics,javafx.base,com.google.gson,com.example.chatterdemo --output ${project.build.directory}/chat-client-image --launcher chat-client=com.example.chatterdemo/com.example.chatterdemo.Main --compress=2 --strip-debug --no-header-files --no-man-pages</commandlineArgs>
                        </configuration>
                    </execution>
                    <!-- 服务端映像 -->
                    <execution>
                        <id>create-server-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${jdk.home}/bin/jlink</executable>
                            <commandlineArgs>--module-path "${project.build.directory}/modules;${jdk.home}/jmods" --add-modules java.base,java.logging,com.google.gson,com.example.chatterdemo --output ${project.build.directory}/chat-server-image --launcher chat-server=com.example.chatterdemo/com.example.chatterdemo.server.ChatServer --compress=2 --strip-debug --no-header-files --no-man-pages</commandlineArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- JavaFX Maven 插件，运行和调试时使用 -->
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <configuration>
                    <mainClass>${main.class}</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>